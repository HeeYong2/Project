2011182051 강희용 fire126@naver.com    010-2825-3555
----------------------------------------------------
2016-03-03 목요일
-----------------
1. 1차미팅 종합설계1 수강신청 여부 상담
2. 학과장님과 면담후 수강신청 하기로 결정

2016-03-07 월요일
-----------------
1. 유니티를 사용한 게임제작으로 방향을 정함


2016-03-21 월요일
-----------------
1. 1차 계획서 작정
  - 내용 수정
  - 쉐이더를 사용한 사실적인 밀물의 구현을 주 연구목표로 함
  - 몬스터가 나오는 일인용 FPS로 장르 결정

2016-03-28 월요일
-----------------
1. 계획서 수정후 다른 교수님들에게 허락 받기
  - 일단 교수회의에서 통과할것을 오황석 교수님에게 지적 받음
2. 통과와 관계없이 구현을 시작하기로 함.

2016-04-04 월요일
-----------------
1. 교수회의에서 양해를 구함.
  - 다른 교수님의 허락 맏기 시작
  - 다음 주까지 최소 7분의 허락을 맡을 것

2. 구현 시작
  - 유니티에서 지형 구현 시작
  - GITHUB에 등록, nhjung@kpu.ac.kr로 같은 팀원으로 등록해서 볼 수 있도록 할 것.

3. 중간 발표
  - 5월 중순 예정
  - 게임의 핵심적은 부분이 플레이 가능해야 함.
  - (최소조건) 플레이어가 총으로 NPC를 죽일 수 있고, 사실적은 물의 그래픽 표현.
  - 발표장에 참석 해야 함.

4 스케쥴

4/4   : 맵 배치, 그래픽 asset 선정, 맵에서 캐릭터 이동
4/11  : 총쏘기, NPC 배치 및 이동.
4/18  : 물 구현, 물에 빠지면 익사해서 게임오버, 기본적인 쉐이더 구현 
4/25  : 잔물결, 파도, 반투명,
5/2   : 경계면 표현(해안선, 해안선 거품, 해안선에서 파도가 커지는 현상, 물이 들어갔다 나갔다, 젖은 모래... )
5/9   : 그래픽 정리 및 디버깅, 시연 준비
5/16    < 중간 발표 >

5. 비쥬얼
  - 3인칭 FPS, 마우스 타게팅
  - 카메라 시점은 캐릭터 뒤통수, 전신샷을 보여줌.

6. 다음 주 까지 할일
  - 기획서 작성 (게임 설명서, 배경 시나리오, 게임 조작법, 게임 시작 부터 엔딩까지 흐름(flow chart), 캐릭터 프로필(플레이어, 몬스터)
     아이템 프로필(무기), 맵 구성(지형, 오브젝트 배치, 몬스터 배치, 플레이어 동선), 제작 환경, <<<<사용 기술 상세 설명>>>>, 스케쥴, 역할 분담.)
  - 작업일지 작성 (다음 카페에 포맷이 있음)
  - 4/4일 항목 완료.

2016-04-11
----------
1. 교수님들에게 검토를 받고 사인 받아오기
  - 3분

2. GitHub에 등록, zzapuno@Hotmail.com 계정 추가(지도교수)

3. 기획서, 작업일지
  - GitHub에 올릴 것

4. 기획서
  - WORD로 작성할 것
  - 플레이어와 몬스터의 디테일
    * HP  이동속도, 공격속도, 데미지...
  - 물 쉐이더 구현에 대한 설명
    * 기본 쉐이더 소스 코드
    * Unity에서의 shared 작성, 적용법 (쉐이더랩?? 또 한개???)
    * 앞으로 구현해야할 요소들에 대한 요구사항 리스트 (일종의 목표)
      - 투명,
      - 물결,
      - 해얀선, 등등을 어떻게 보이도록 구현할 것인지.

5. 게임 구현
  - 물구현, 물에 빠지면 익사 구현, 기본적인 쉐이더 적용.

6. 다음주 까지 할 것
  - 교수님들 검토/사인
  - 기획서 Word로,  보완할 것
  - 작업일지, 기획서, GitHub에 올릴 것.
  - 게임 구현해 오기.


2016-04-18
----------
1. 교수님들에게 검토 받고 사인 받아오기
  - 지난주에 추가로 한분도 못함.

2. Github는 잘 동작.
  - 기획서, 작업일지 업로드 확인

3. 기획서보완
  - 전체 맵 구성도 (시작점, 종료에 필요한 배의 위치, 몬스터 스폰 위치, 바람직한 플레이어의 동선)
  - 쉐이더에 대한 사전 조사 및 구현 아이디어 설명 (4월 11일 지적 사항 이행)
  - 구현 아이디어 : 각각의 구현 목표에 대한 구체적인 구현방법에 대한 설명 (빛의 이동 경로, 필요한 폴리곤의 구성(크기, 위치, 역할), 쉐이더에 넘어가는 매개변수의 종류등..)

4. 제작 진행
  - 총쏘기 데미지 및 물에 빠지기가 업로드 안됨.
  

5. ToDo
  - 물쉐이더 구현 : 잔물결, 파도, 반투명,
  - 3.기획서 -> 구현 아이디어
  - 1. 교수님들 검토 
  - Unity3D 최신 버전으로 업데이트 (5.3.4f1)
  - Library Directory GitHub에서 퇴출.

2016-05-02
----------
1. 심사위원 : 장지웅, 이대현, 김경철, 임창주 교수님

2. [계획서 제출, 제안서 제출, 계획서 입력] 할 것.

3. 작업일지는 계속 이어서 쓸것. 디렉토리를 만들어서 날짜별로 화일을 만들거나, 작업일지 화일에 계속 추가하는 형식으로 작성할 것

4. 기획서
 - 맵디자인은 대충 손으로 그린 그림이라도 보여줄것.

5. 게임시연
  - GITHUB로 한것은 안되고, 따로 다운받은 버전은 실행가능 => GITHUB로도 실행가능하게 수정해야함.
     * 작업 디렉토리 말고 새로 디렉토리를 만들어서 Github를 통해 다운받은 후 실행 테스트를 해볼것
  - Unity를 최신버전으로 업데이트.
  - 이동, 레이어쏘기, 몬스터 이동, 몬스터 사냥, 플레이어 HP감소, 물 표현, 밀물 구현, UI 구현
  - 총 맞았을 경우 데미지 표시 (노란 숫자가 떠오르기)

6. ToDo
  - 물 세이더에 대한 보단 발전된 구현 및 그것에 대한 자세한 설명 
     * 표현 하고 싶었던 목표 설명
     * 구현 아이디어 설명
     * 실제 구현된 쉐이더 코드 설명
  - 몬스터 AI 구현
     무엇을 할것인가????


2016-05-09
----------
1. GitHub
 - 작업한 내용이 올라가지 않음
   "에러 메세지를 보니 올리기 전에 일단 다른 사람이 올린것을 받아야 함"

2. 문제점
  - 졸업 연구에 진전이 없음
   * 물의 구현 : Skybox가 비치고, 물결이 일렁이나 다른데 있는 것을 Copy해 왔을 뿐 안에서 어떻게 구현되어 있는지 모름.
   * AI : 근처에 플레이어가 있으면 달려든다...

3. 졸작이란
   1. 창의적인 아이디어로 기존에 없던 새로운 게임 플레이를 구현
   2. 대학생 수준의 도전적인 기술적인 문제를 해결하여 게임에 적용
   3. 양과 질로 승부, 다시말해 컨텐츠로 승부 (주로 기획이나, 그래픽을 하는 친구들이 도전)

4. ToDo
   1. 졸업작품으로 무엇을 할 것인가를 고민해 오기.


2016-05-30
----------
1. 졸작 중간 발표 결과 : 재발표
  - Unity사용에 있어서 요구 조건 불만족
  - 졸작에 걸맞는 Contribution이 없음.

2. 대안.
  - 맵에디터
    * MFC를 이용한 맵 제작 툴, DirectX9
    * 기존 구현 : 테라인 수정, Navi Mesh, 오브젝트 배치
    * 추가 구현 한다면 가능한 것들 (다 하자는 것이 아니고 적당한 것을 골라보자)
      - 라이팅 (그림자, radiosity 맵), 스크립트 연동 (스위치 누르면 문이열린다, 엘리베이터가 위아래로 움직인다. NPC가 대사를 하는 컷신 제작)
      - 나무나 풀심기기능, 강/호수/바다 만들어 넣기
      - LOD 객체 생성, Nav Mesh 자동생성
      - ....

    
  - 동물사냥
    * 맵에디터를 사용한 간단한 사냥 게임.
    * 확장 :
       - (기본) 맵 확장, 시작과 엔딩화면, 좀더 현실적인 맵 배치 
    * 추가 구현 (다 하자는 것이 아니고 적당한 것을 골라보자)
       - 무기/탄약 선택 => 사냥물을 팔아서 돈으로 상점에서 구입해서 쓰는 시스템
       - 트로피 수집 퀘스트 (간단한 시나리오를 추가, 예) 사냥왕 되기.. )
       - 지형을 좀 넓고, 복잡하게 해서 사냥감 찾아다니가..
       - NPC와 사냥 솜씨 겨루기 모드
       - 동물마다 저마다의 AI (숨기, 도망가기, 공격하기, 친구 부르기...)

3. 다음 미팅
  - 6월 9일 목요일
  - 무엇을 어떻게 추가 구현할 것인가. 6월 13일 어디까지 추가 구현한 것을 보여줄 것인가.
  - 추가 구현한 내용, 추가 구현 하고 있는 내용
  - 작업 하고 있는 것 GITHUB에 올리기.


2016-06-09
----------
1. 아이디어.
 - 맵에디터에 오브젝트를 배치할 때, 그 오브젝트가 가지고 있는 애니메이션도 같이 볼 수 있게 하자.
   * 아이디어가 너무 심플하고, 구현 난이도도 높지 않고, 그 것으로 할 수 있는 후속 작업의 연계가 불분명 하다.

2. 아이디어 샘플
 - UI editor
  * MFC로 UI를 만들고 수정할 수 있는 프로그램을 제작하고, 간단한 게임가 연동하는 것을 보여준다. 게임은 동물사냥 같은 기존의 게임을 큰  수정없이 사용해도 됨.


2. 다음 미팅
 - 6월 13일 월요일
 - 졸업 작품에 어울리는 구현 가능한 아이디어를 생각해 올것
   * 직장인과 일인팀 이라는 핸디캡에 어울리는 분량으로 조절

2016-06-13
----------
1. 재발표 
  - 맵에디터와 샘플게임 발표
  - 이대현 교수님 : DirectX11으로 포팅하고, FBX 모델을 읽어들일 수 있게 수정해서, 후배들이 게임 만들 때 쓸 수 있도록 하자"
  - 조건을 만족하면 졸업, 아니면 될 때 까지.

2. DirectX11과 FBX화일 사용
 - https://github.com/Microsoft/DirectXTK  여기에 있는 오픈소스 툴을 사용하면 쉬울것 같음
 - 2015년도 졸업생이 제작한 샘플 게임 GitHub에 등록.

3. GitHub 정리
 - Unity Project 삭제
 - 맵 에디터 프로젝트 등록

4. 일정
 - 7월 :
      6월 27일 : Directx11 관련 샘플 및 튜토리얼 파일 수집
      7월 4일 : Directx11을 통한 디바이스 초기화 및 삼각형 , 큐브 생성 
      7월 11일 : Directx11을 통한 지형 생성 도전
      7월 18일 : Direct9으로 생성했던 맵툴에 Direct11으로 이식 도전
      7월 25일 : 나머지 기능에 대해서도 DirectX11으로 모두 이식
         << DirectX11으로 포팅 >>
 - 8월 
      8월 1일 : FBX 관련 샘플 및 튜토리얼 파일 수집
      8월 8일 : FBX로 된 메시를 띄워볼 수 있는 간이 파일 생성 및 실험
      8월 15일 : FBX를 읽어 들일 수 있는 코드를 Directx9으로 생성 했던 오브젝트툴에 이식
      8월 22일 : 15일까지 했던 작업에서 더 연장 될 것으로 예상되고, 연동 준비
      8월 29일 : 툴의 기능을 확인할 수 있는 정도의 샘플 게임연동
          << FBX 로딩 구현,  샘플 게임 연동 확인 >>
 - 9월 : 최종 발표, 발표 준비, 디버깅, Document 작성

5. 다음 미팅
  - 6월 27일 : GitHub 정리, 상세 스케쥴 작성, 작업 일지 작성 재개, VS2015로 마이그레이션 해볼것



2016-06-27
----------
1. Visual Studio 2015 이식 시도
 - 너무 바뀌는 것이 많아서 일단 2013에서 작업한 후에 2015로 옮기려고 함.

2. 다음 미팅
  - 7월 11일 : DirectX11에서 지형 생성 까지 (메시 에디팅과, 텍스쳐 입히기)


2016-07-11
----------
1. DirectX11에서 화면에 아무것도 나오지 않고 있음...

2. 졸작 최종 발표일
 - 8월 16일

3. 다음 미팅
  - 7월 25일 : 나머지 기능에 대해서도 DirectX11으로 모두 이식

2016-07-25
----------
1. 지형 렌더링은 DirextX11에서 됨.

2. FBX 모델 렌더링이 안되고 있음.

3. 작업 방향 수정
  - 기존 맵툴의 렌더링 모듈만 DirectX11으로 교체하는 방법은 포기
  - DirecX11 렌더러에 기존 맵툴의 기능들을 추가하는 방법으로 구현.
   * 전부 다 구현하기는 일정 상 어렵고 핵심 기능만 추가
   * 핵심기능
     - FBX 모델 배치  (위치, 스케일, 회전)
     - 지형 높낮이 수정
     - Texture 입히기-> 다시 말해서 지형입히기 (잔디, 사막, 길, 자갈 밭...) (texture 팔레트 UI, Brush UI) 
     - Texture 블렌딩 -> 지형사이의 경계선을 자연스럽게 보이게 하기.

4. GiT HUB에 올려 놓고, 수정 할 때마다 Sync할 것.

5. 최종 발표 까지 3주 남았음
   
  8월 1일 까지   : FBX 렌더링
  8월 8일 까지   : 샘플게임 연동 시작.
  8월 16일 까지  : 샘플 게임 연동, 데모 준비, 디버깅


6. 다음 미팅
 - 8월 8일 오후 8시
 - 핵심기능이 전부 동작하는 맵툴을 만들어 올것.
 - GitHub에 컴파일 실행 가능 형태로 등록 하고, 계속 업데이트 할 것.

2016-08-22
----------
1. 졸작 제작 방향을 바꾸기로 함.

2. 회사에서 하는 프로젝트를 수정해서 제출

3. 프로젝트 개요
 - 시각화 (Visualization)
 - 지도뷰 : << MAIN >>
   * 이벤트 발생시 
 - 논리뷰 :
   * 이벤트의 시각화 : 어느 위치에서 어느 이벤트가 발생했는지 보여주기
 - 상세뷰 :

4. 발표범위
 - 전체 프로그램 : 지도뷰 + 논리뷰

5. 문제점
 - 과제가 너무 간단하다. 유니티를 쓸 줄 알면 하루면 그냥 할 수 있는 내용.

6. 해결방법
 - 과제를 키운다.
  * 회사에서 앞으로 할 일들을 미리 구현해보기
    - 회사에 문의해 보겠음.
    - 예상:  여러 프로그램의 네트워크 연동 : 이벤트 전달 및 이벤트 응답 구현 (응답 : 후퇴 교전, 방어, + 적절한 부대 선택후 지원요청, 상부 지시 요청....)
                 -> 가상 지휘 통제소 프로그램 구현
             이벤트를 실제 3D 모델링을 해서 표시
             아군 및 적군의 위치 실시간 연동 표시
              이벤트 로그 및 리플레이 기능(스타에 있던 그것)             
  * 게임을 덧 씌우기

7 스케줄
 - 발표 일정 9월 5일
 - 제목 : 전장 전술 상황 시각화 프로그램

8 다음 미팅
  - 8월 29일 월요일 8-9시 사이
  - 준비물
-    - 계획서 : 새로 다시 써오기, 최종 결과물이 어떻게 동작을 하는 건지를 구체적으로 적어오기



2016-08-29
----------
1. 계획서 <- 내용이 잘못 전달 되었음. 제안서 형식을 의미하는 거였음.
  * 제안서 : PPT 형식으로, 최종 결과물의 모습을 설명하는 문서.
  * 실제로 필요한 것은 기획서: 최종 화면 구성, 프로그램의 흐름, 작동 방식 및 내부 구조 설명

 2. 9월 5일 2차 발표.
  - 발표할 것이 아직 없음....
  - 발표 가능한 물건 : 
    전술 화면 : 지도 상에 부대가 보이고(육각 기둥) 커서를 올려 놓으면 부대 정보가 표시, 선택한 부대를 중심으로 시점 변환 가능

3. 최종 완성물의 형태 보여주기
  - 지도뷰와 논리뷰 상세뷰의 모습
   * 조작 가능한 커맨드들 (논리뷰 조작 : 부대 선택, 편제간 상하 이동....???) (지도 뷰에서 부대 선택)
  - 이벤트 처리의 흐름도, 이벤트의 종류 및 이벤트별 반영 내용 (위치 변경, 적출현, 부대 충원 등등....), 이벤트 생성 방법 (미리 저장해놓은 로그를 그대로 시간에 맞춰서 발생)

4. 수요일 전까지 포스터 내용 변경
 - 포스터를 보고 어떤 프로그램을 만들고, 어떻게 보이고 조작할지 예측가능하게 (컨셉 아트)


2016-09-05
----------
1. 작품 미완성으로 
 - 깔끔하게 F를 받고 등록금 아끼고 좀더 준비해서 재도전     ( X )
 - 11월 졸업사정 전까지 완성할 수 있을 것 같다. 해보겠다.   ( O )


2. 문제점
 - 원래 주제가 바뀌면 제안서 부터 다시하는 것이다. 제안서는 넘어가기로
 - 완성도.
  - Demo할때 제대로 동작을 안했고.
  - Unity를 사용했는데 완성도가 너무 떨어진다.

3. 최종 완성물의 형태
  - 논리뷰, 상세뷰 완성   (부대 편제, 커서 위치시 정보 표시)
  - 이벤트 연동 (이벤트 발생시 알람 기능, 이벤트 선택시 논리뷰와 상세뷰에서 이벤트에 해당하는 부대정보 표시)
  - 이벤트 수신 (네트워크 소켓으로 이벤트 정보가 날라와서, 그 정보를 해석해서 화면에 보여줌)
  - DB에 저장하고, 저장된 데이터를 불러와서 볼수 있도록 한다.
  - 이벤트 (부대이동, 적 부대 발견, 부대 이동, 부대 증원, 교전 개시, 피해 상황)
  - 이벤트 생성은 미리 데모용 이벤트를 준비한 다음에 네트워크를 통해서 보내주는 프로그램을 작성해서 사용.

4. 다음 미팅
  - 10월 5일 수요일 오후 9시
  - 진행상황 체크, 실행프로그램 가져오기
  
5. 비고
  - 회사 정책상 소스코드 공개는 불허이브로 GitHub에 올리는 것은 생략.
  - 작업일지와 회의록만 올리도록 함.


2016-10-05
----------
1. 프로젝트 계속 진행 중
 - DB연동을 위해서 별개의 MFC프로그램에서 맵뷰를 담당하도록 할 예정
 - 유니티로 작성하고 있는 논리뷰와는 IPC를 통해서 연동할 예정

2. 논리뷰 진행 상황
 - 3D로 부대 Hierachy 표시 및 Traverse 가능
 - 노드 선택시 노드 정보 표시
 - 노드 위치 변경 가능
 - 위험 경보 표시, 위험 노드 근처 노드에 주의 경보 표시

3. 11월 28일 까지는 맡은 부분을 완료 시켜야 함. ( 2016-09-05의 3. 최종 완성물의 형태)

4. 다음 미팅 11월 2일 수요일 저녁 9시
 - 진행 상황 보여 주기
 - 11월 28일 까지의 스케쥴 작성해 오기


11월 28일 까지의 주 단위 스케줄 (작성자 : 강희용)
----------
11월 2일 ~ 11월 9일
 -우클릭 팝업 메뉴 생성
(위협 발생 , 비슷한 취약점을 가진 객체 검색 후 표시 
11월 9일 ~ 11월 16일
 - 저장 및 저장 된 데이터로 로드
11월 16일 ~ 11월 23일
 - 이벤트를 받았을 때 식별 할 수 있도록 text같은 문구 생성
11월 23일 ~ 11월 28일
 - 최종 점검 및 부족한 부분 완성


2016-11-02
----------
1. 맵뷰 (관련회사에서 작성한 MFC를 사용한 이벤트 발생 프로그램)와 논리뷰, 상세뷰 연동
  - 논리뷰는 실행 오류
  - 맵퓨와 상세뷰 이벤트 발생 연동 확인

2. 앞으로 구현할 부분
 - 저장 및 로드 (좌표 위치 변경을 저장해서 재 실행시 변경된 위치가 유지되도록 한다.)
 - 자동 이벤트 발생 (엑셀에 저장된 이벤트를 맵뷰에서 순서대로 보냄)
 - 이벤트 UI (Event 내용을 논리뷰와 상세뷰에서 표시)

3. 다음 미팅
 - 11월 24일 저녁 9시 (최종 구현 점검)

2016-11-24
----------
1. 구현은 다 되었음.
 - 뷰의 저장 로드 구현
 - 이벤트 발생및 연동 구현

2. 졸업을 위한 최종 결과물 제출
 - 최종 보고서 양식을 다운 받아서 작성
 - 결과물 제출 (설명서, 프로그램(X), 동영상) CD
 - 동영상에 자막이나 음성 삽입 필요.
 
3. 다음 미팅
 - 최종 보고서와 제출물 완성
 - 11월 28일 오후 8시